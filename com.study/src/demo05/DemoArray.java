package demo05;

/**
 * @Author caixuan
 * @Date 2020/7/15 22:47
 * @Version 1.0
 */

/*
数组：是一种容器，可以同时存放多个数值
特点：
1、数组是一种引用数据类型
2、数组当中的多个数据，类型必须统一
3、数组的长度在程序运行期间不可改变


数组的初始化，在内存当中创建一个数组，并且向其中赋予一些默认值
两种渐渐的初始化方式：
1、动态初始化 指定长度
2、静态初始化 指定内容

动态初始化数组格式：
ps：在创建数组的时候，直接指定数组当中的数据元素个数
数据类型[] 数组名称 = new 数据类型[数组长度];
解析：
左侧数据类型：就是数组当中保存的数据，全部都是统一类型
左侧的中括号：代表是一个数组
左侧的数组名称：给数组取一个名称
右侧的new：代表创建数据的动作
右侧数据类型：必须和左侧的数据类型保持一致
右侧中括号的长度：也就是数组当中，到底可以保存多少个数据


静态初始化：
        数据类型[] 数组名称 = new 数据类型[]{元素1，元素2};
省略格式：数据类型[] 数组名称 = {元素1，元素2}
ps：在创建数组的时候，不直接指定数据个数多少，而是直接将具体的数据内容进行指定
注意事项：
1、静态初始化没有直接指定长度，但是仍会自动推算得到长度
2、静态初始化标准格式可以拆分为两个步骤
3、静态初始化一旦使用省略格式，就不能拆分为两个步骤了
eg:
int[] arrayD;
arrayD = new int[]{1,2,3}


使用建议：
如果不确定数组当中的具体内容，用动态初始化;否则已经确认了具体的内容，用静态初始化

 */
public class DemoArray {
    public static void main(String[] args) {
        //创建一个数组，里面可以存放300个int数据
        //数据类型[] 数组名称 = new 数据类型[数组长度];
        int[] arrayA = new int[300];

        //创建一个数组，可以存放10个double类型的数据
        double[] arrayB = new double[10];


        //静态初始化
        //直接创建一个数据，里面装的全都是int,具体为;5,15,20
        int[] arrayC = new int[]{5,15,20};
    }
}
